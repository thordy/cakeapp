extends ../layout.pug

block scripts
    script.
        var match = !{JSON.stringify(match)}
        var playersMap = !{JSON.stringify(players)}
        $(function () {
            $(document).ready(function(){
                var matchId = match.id;
                var socket = io(window.location.protocol + '//' + window.location.host + '/match/' + matchId);
                socket.on('connect', function(data) {
                    socket.emit('join', 'Client Conneting');
                });

                socket.on('connected', function(data) {
                    // Send message to client announcing that we are spectating
                    socket.emit('spectator_connected', '');
                });

                socket.on('possible_throw', function(data) {
                    console.log(data);
                    var dart;
                    if (data.darts_thrown === 1) {
                        dart = $('#first');
                    }
                    else if (data.darts_thrown === 2) {
                        dart = $('#second');
                    }
                    else if (data.darts_thrown === 3) {
                        dart = $('#third');
                    }
                    else {
<<<<<<< HEAD
                        console.log("Incorrect number of darts thrown: " + data.darts_thrown);
=======
                        console.log("Unknown darts_thrown: " + data.darts_thrown);
>>>>>>> 547ff02e784ba79504abf923edf8044ff479a30f
                        return;
                    }
                    dart.text(data.dart_text);

                    if (data.multiplier == 3) {
                        dart.css('background-color', '#d9534f');
                    }
                    else if (data.multiplier == 2) {
                        dart.css('background-color', 'orange');
                    }
                    else {
                        dart.css('background-color', 'black');
                    }

                    // Update player score
                    var playerScore = $('#player-id-' + data.current_player_id);
                    playerScore.text(parseInt(playerScore.text()) - data.score);
                    $('#total').text(data.score + parseInt($('#total').text()));

                    if (data.is_finished) {
                        var text = playersMap[data.current_player_id].name + ' won the leg';
                        showAlert(text, function() {
                            alertify.success('Leg finished');
                        });
                    }
                });

                socket.on('score_update', function(data) {
                    console.log(data);
                    var players = data.players;
                    for (key in players) {
                        var player = players[key];
                        var playerLabel = $('#player-id-' + player.id);
                        var playerTD = $('#player-score-' + player.id);
                        playerLabel.text(player.current_score);
                        $('#player-id-' + player.id + '-ppd').text(player.ppd.toFixed(2));

                        if (player.current) {
                            playerTD.addClass('label-active-player')
                            playerTD.removeClass('label-inactive-player');
                            $('#current-player').text(player.name);
                        }
                        else {
                            playerTD.addClass('label-inactive-player');
                            playerTD.removeClass('label-active-player');
                        }
                    }
                    // Set round number
                    $('#round-number').text('R' + data.match.round_number);

                    // Reset UI elements
                    $('#first').text('');
                    $('#second').text('');
                    $('#third').text('');
                    $('#total').text(0);

                    // Update the visits table
                    var visit = data.visits[data.visits.length - 1];
                    var playerName = playersMap[visit.player_id].name;
                    var firstDartScore = getScoreString(visit.first_dart_multiplier, visit.first_dart);
                    var firstDartCSS= getDartCSS(visit.first_dart_multiplier);
                    var secondDartScore = getScoreString(visit.second_dart_multiplier, visit.second_dart);
                    var secondDartCSS = getDartCSS(visit.second_dart_multiplier);
                    var thirdDartScore = getScoreString(visit.third_dart_multiplier, visit.third_dart);
                    var thirdDartCSS = getDartCSS(visit.third_dart_multiplier);
                    var total = (visit.first_dart_multiplier * visit.first_dart ) + (visit.second_dart_multiplier * visit.second_dart) + (visit.third_dart_multiplier * visit.third_dart);
                    if (visit.is_bust) {
                        total = 'BUST';
                    }
                    var html =
                        "<tr>" +
                            "<td>" + playerName + "</td>" +
                            "<td class='dart-score-container no-border'><label class='" + firstDartCSS + "'>" + firstDartScore + "</label></td>" +
                            "<td class='dart-score-container no-border'><label class='" + secondDartCSS + "'>" + secondDartScore + "</label></td>" +
                            "<td class='dart-score-container no-border'><label class='" + thirdDartCSS + "'>" + thirdDartScore + "</label></td>" +
                            "<td><label>" + total + "</label></td>" +
                        "</tr>";
                    $('#visits-table > tbody > tr:first').after(html);
                });

                socket.on('match_finished', function(data) {
                    console.log(data);
                    location.href = '/match/' + data.new_match_id + '/spectate';
                });

                // Reverse the rows in the table to show newest throws first
                var tbody = $('#visits-table tbody');
                tbody.html($('tr',tbody).get().reverse());

                // Add a row to the top of the table which contains the current throw for a given player
                if (!match.is_finished) {
                    var html =
                        "<tr>" +
                            "<td id='current-player' style='height: 50px;'>" + playersMap['p' + match.current_player_id].name + "</td>" +
                            "<td class='dart-score-container no-border'><label id='first' text='0'></label></td>" +
                            "<td class='dart-score-container no-border'><label id='second' text='0'></label></td>" +
                            "<td class='dart-score-container no-border'><label id='third' text='0'></label></td>" +
                            "<td><label id='total' text='0'>0</label></td>" +
                        "</tr>";
                    $('#visits-table').prepend(html);
                }
            });
            function getDartCSS(multiplier) {
                switch (multiplier) {
                    case 3: return 'dart-triple';
                    case 2: return 'dart-double';
                    default: return 'dart-single';
                }
            }

            function getScoreString(multiplier, score) {
                if (score === 0) {
                    return 'Miss';
                }
                else if (score === 25) {
                    score = 'Bull';
                }

                if (multiplier === 3) {
                    return 'T-' + score;
                }
                else if (multiplier === 2) {
                    return 'D-' + score;
                }
                return score;
            }
        });

block content
    h2 Spectate

    mixin get_player_cell(player)
        td(id='player-score-' + player.id class=player.current ? 'label-active-player' : 'label-inactive-player')
            label(id='player-id-' + player.id class='label label-block label-player-score')= player.current_score
            label(id='player-name-' + player.name class='label-player-name')= player.name + player.wins_string

    h3 Players
    div(class='table-responsive')
        table(class='table table-striped table-bordered' id='player-spectate-table' style='table-layout: fixed')
            tbody
                tr
                    td(class='txt-center' style='width: 6%;')
                        label(id='round-number' class='match_information')= 'R' + match.round_number
                        label(class='match_information')= game_type.short_name
                    each player in players
                        +get_player_cell(player)
               
    
    mixin get_dart_label(dart)
        if dart.multiplier == 3
            label(class='btn-score dart-triple')= 'T-' + dart.value
        else if dart.multiplier == 2
            if value == 25
                label(class='btn-score dart-double') Bull
            else
                label(class='btn-score dart-double')= 'D-' + dart.value
        else
            if dart.value == 0
                label(class='btn-score') Miss
            else if dart.value == 25
                label(class='btn-score') Bull
            else
                label(class='btn-score')= dart.value
    
    h3 Visits
    div(class='table-responsive')
        table(class='table table-striped table-bordered' id='visits-table' style='table-layout: fixed;')
            thead
                tr
                    th Player
                    th First
                    th Second
                    th Third
                    th Total
            tbody
                each visit in match.visits
                    tr
                        td= players[visit.player_id].name
                        td(class='dart-score-container no-border')
                            +get_dart_label(visit.first_dart)

                        td(class='dart-score-container no-border')
                            +get_dart_label(visit.second_dart)

                        td(class='dart-score-container no-border')
                            +get_dart_label(visit.third_dart)
                        td
                            if visit.is_bust
                                label BUST
                            else
                                label= (visit.first_dart.multiplier * visit.first_dart.value ) + (visit.second_dart.multiplier * visit.second_dart.value) + (visit.third_dart.multiplier * visit.third_dart.value)
